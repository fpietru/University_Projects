# Tu trzeba wskazać, gdzie jest rozwiązanie oraz pliki ma.h i memory_tests.h.
SOLUTION=.
HEADERS=.

CC       = gcc
CPPFLAGS =
CFLAGS   = -Wall -Wextra -Wno-implicit-fallthrough -std=gnu17 -fPIC -O2 -I$(HEADERS)
LDFLAGS  =

vpath %.h $(HEADERS)
vpath %.so $(SOLUTION)

.PHONY: all clean test

all: ma_tests

ma_tests.o: ma_tests.c ma.h memory_tests.h

ma_tests: ma_tests.o libma.so
	gcc -L. -L$(SOLUTION) -o $@ $< -lma

test: ma_tests
	export LD_LIBRARY_PATH=$$LD_LIBRARY_PATH:.:$(SOLUTION); for test in one two connections undetermined delete params malicious pipeline shift cycle alloc memory weak disconnect; do if /bin/time -f%U ./ma_tests "$$test" && valgrind -q --error-exitcode=123 --leak-check=full --show-leak-kinds=all --errors-for-leak-kinds=all ./ma_tests "$$test"; then echo "$$test pass"; else echo "$$test fail"; fi; done

clean:
	rm -f ma_tests.o ma_tests
